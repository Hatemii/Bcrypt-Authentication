{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Desktop/Bcrypt-Authentication/app/javascript/frontend/src/routes/Routes.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from '../components/HomePage/Home';\nimport SignUp from '../components/Auth/SignUp';\nimport LogIn from \"../components/Auth/LogIn\";\nimport Dashboard from '../components/HomePage/Dashboard';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Routes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedInStatus: \"Not_LoggedIn\",\n      user: {}\n    };\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogOut = this.handleLogOut.bind(this);\n  }\n\n  checkLoginStatus() {\n    axios.get(\"http://localhost:3000/logged_in\", {\n      withCredentials: true\n    }).then(res => {\n      if (res.data.logged_in && this.state.loggedInStatus === \"Not_LoggedIn\") {\n        this.setState({\n          loggedInStatus: \"Logged_In\",\n          user: res.data.user\n        });\n      } else if (!res.data.logged_in && this.state.loggedInStatus === \"Not_LoggedIn\") {\n        this.setState({\n          loggedInStatus: \"Logged_In\",\n          user: {}\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    this.checkLoginStatus();\n  }\n\n  handleLogin(data) {\n    this.setState({\n      loggedInStatus: \"Logged_In\",\n      user: data.user\n    });\n  }\n\n  handleLogOut() {\n    this.setState({\n      loggedInStatus: \"Not_Logged_In\",\n      user: {}\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(Home, { ...props,\n              loggedInStatus: this.state.loggedInStatus,\n              handleLogin: this.handleLogin,\n              handleLogOut: this.handleLogOut\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/dashboard\",\n            render: props => /*#__PURE__*/_jsxDEV(Dashboard, { ...props,\n              loggedInStatus: this.state.loggedInStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signup\",\n            component: SignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            component: LogIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ubuntu/Desktop/Bcrypt-Authentication/app/javascript/frontend/src/routes/Routes.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","Home","SignUp","LogIn","Dashboard","axios","Routes","constructor","state","loggedInStatus","user","handleLogin","bind","handleLogOut","checkLoginStatus","get","withCredentials","then","res","data","logged_in","setState","catch","err","console","log","componentDidMount","render","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from '../components/HomePage/Home'\nimport SignUp from '../components/Auth/SignUp'\nimport LogIn from \"../components/Auth/LogIn\"\nimport Dashboard from '../components/HomePage/Dashboard'\nimport axios from 'axios'\n\nexport default class Routes extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            loggedInStatus: \"Not_LoggedIn\",\n            user: {}\n        }\n\n        this.handleLogin = this.handleLogin.bind(this)\n        this.handleLogOut = this.handleLogOut.bind(this)\n    }\n\n\n    checkLoginStatus() {\n        axios.get(\"http://localhost:3000/logged_in\",\n            { withCredentials: true })\n            .then(res => {\n                if (res.data.logged_in && this.state.loggedInStatus === \"Not_LoggedIn\") {\n                    this.setState({\n                        loggedInStatus: \"Logged_In\",\n                        user: res.data.user\n                    })\n                } else if (!res.data.logged_in && this.state.loggedInStatus === \"Not_LoggedIn\") {\n                    this.setState({\n                        loggedInStatus: \"Logged_In\",\n                        user: {}\n                    })\n                }\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n\n    componentDidMount() {\n        this.checkLoginStatus()\n    }\n\n\n    handleLogin(data) {\n        this.setState({\n            loggedInStatus: \"Logged_In\",\n            user: data.user\n        })\n    }\n\n\n    handleLogOut() {\n        this.setState({\n            loggedInStatus: \"Not_Logged_In\",\n            user: {}\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Router>\n                    <Switch>\n                        <Route\n                            exact path={\"/\"}\n                            render={props => (\n                                <Home{...props}\n                                    loggedInStatus={this.state.loggedInStatus}\n                                    handleLogin={this.handleLogin}\n                                    handleLogOut={this.handleLogOut}\n                                />\n                            )}\n                        />\n                        <Route exact path=\"/dashboard\"\n                            render={props => (\n                                <Dashboard{...props}\n                                    loggedInStatus={this.state.loggedInStatus} />\n                            )}\n                        />\n\n\n                        <Route exact path=\"/signup\" component={SignUp} />\n                        <Route exact path=\"/login\" component={LogIn} />\n                    </Switch>\n                </Router>\n            </div >\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}